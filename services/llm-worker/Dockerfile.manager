# Multi-stage Dockerfile for Model Manager
# Specialized service for LLM model lifecycle management

# ===================
# BASE MANAGER STAGE
# ===================
FROM node:20-alpine AS manager-base

# Install system dependencies
RUN apk add --no-cache \
    # Basic utilities
    curl \
    wget \
    # Build tools
    make \
    g++ \
    python3 \
    # Cron for scheduled tasks
    dcron

# Create app directory
WORKDIR /app

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S modelmanager -u 1001

# Create necessary directories
RUN mkdir -p /app/logs && \
    chown -R modelmanager:nodejs /app

# ===================
# MODEL MANAGER
# ===================
FROM manager-base AS model-manager

# Copy package files and install dependencies
COPY package*.json ./
RUN npm ci --only=production && npm cache clean --force

# Copy manager source code
COPY --chown=modelmanager:nodejs src/ ./src/
COPY --chown=modelmanager:nodejs managers/ ./managers/
COPY --chown=modelmanager:nodejs config/ ./config/
COPY --chown=modelmanager:nodejs scripts/ ./scripts/

# Setup cron for scheduled tasks
COPY --chown=modelmanager:nodejs crontab /etc/crontabs/modelmanager

# Switch to non-root user
USER modelmanager

# Expose health check port
EXPOSE 3009

# Health check
HEALTHCHECK --interval=60s --timeout=15s --start-period=120s --retries=3 \
    CMD curl -f http://localhost:3009/health || exit 1

# Manager command with cron
CMD ["sh", "-c", "crond && node managers/model-manager.js"]

# ===================
# DEVELOPMENT MANAGER
# ===================
FROM manager-base AS development

# Install development dependencies
COPY package*.json ./
RUN npm ci && npm cache clean --force

# Copy source code
COPY --chown=modelmanager:nodejs . .

# Switch to non-root user
USER modelmanager

# Development command
CMD ["npm", "run", "manager:dev"]
