# Multi-stage Dockerfile for LLM Gateway Workers
# Specialized workers for queue processing and model management

# ===================
# BASE WORKER STAGE
# ===================
FROM node:20-alpine AS worker-base

# Install system dependencies
RUN apk add --no-cache \
    # Basic utilities
    curl \
    wget \
    # Build tools
    make \
    g++ \
    python3

# Create app directory
WORKDIR /app

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S llmuser -u 1001

# Create necessary directories
RUN mkdir -p /app/logs && \
    chown -R llmuser:nodejs /app

# ===================
# LLM WORKER
# ===================
FROM worker-base AS llm-worker

# Copy package files and install dependencies
COPY package*.json ./
RUN npm ci --only=production && npm cache clean --force

# Copy worker source code
COPY --chown=llmuser:nodejs src/ ./src/
COPY --chown=llmuser:nodejs workers/ ./workers/
COPY --chown=llmuser:nodejs config/ ./config/

# Switch to non-root user
USER llmuser

# Expose health check port
EXPOSE 3010

# Health check
HEALTHCHECK --interval=45s --timeout=15s --start-period=90s --retries=3 \
    CMD curl -f http://localhost:3010/health || exit 1

# Worker command
CMD ["node", "workers/llm-worker.js"]

# ===================
# MODEL MANAGER
# ===================
FROM worker-base AS model-manager

# Copy package files and install dependencies
COPY package*.json ./
RUN npm ci --only=production && npm cache clean --force

# Copy manager source code
COPY --chown=llmuser:nodejs src/ ./src/
COPY --chown=llmuser:nodejs workers/ ./workers/
COPY --chown=llmuser:nodejs config/ ./config/

# Switch to non-root user
USER llmuser

# Expose health check port
EXPOSE 3011

# Health check
HEALTHCHECK --interval=60s --timeout=15s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3011/health || exit 1

# Manager command
CMD ["node", "workers/model-manager.js"]

# ===================
# DEVELOPMENT WORKER
# ===================
FROM worker-base AS development

# Install development dependencies
COPY package*.json ./
RUN npm ci && npm cache clean --force

# Copy source code
COPY --chown=llmuser:nodejs . .

# Switch to non-root user
USER llmuser

# Development command
CMD ["npm", "run", "worker:dev"]
