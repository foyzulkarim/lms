# User Management Service
# This file should be in the same directory as the service code

version: '3.8'

services:
  user-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-production}
    image: lms/user-service:${VERSION:-latest}
    container_name: lms-user-service
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=3001
      - LOG_LEVEL=${LOG_LEVEL:-info}
      
      # Database connections
      - POSTGRES_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresql:5432/${POSTGRES_DB}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis-master:6379/2
      
      # Event streaming
      - KAFKA_BROKERS=${KAFKA_BROKERS:-kafka-1:9092,kafka-2:9092,kafka-3:9092}
      - KAFKA_CLIENT_ID=user-service
      - KAFKA_GROUP_ID=user-service-group
      
      # File storage
      - FILE_SERVICE_URL=http://file-service:3004
      - AVATAR_UPLOAD_MAX_SIZE=${AVATAR_UPLOAD_MAX_SIZE:-5242880}
      
      # Email configuration
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - FROM_EMAIL=${FROM_EMAIL:-noreply@lms.example.com}
      
      # User validation
      - EMAIL_VERIFICATION_REQUIRED=${EMAIL_VERIFICATION_REQUIRED:-true}
      - USERNAME_MIN_LENGTH=${USERNAME_MIN_LENGTH:-3}
      - USERNAME_MAX_LENGTH=${USERNAME_MAX_LENGTH:-30}
      
      # Privacy settings
      - GDPR_COMPLIANCE=${GDPR_COMPLIANCE:-true}
      - DATA_RETENTION_DAYS=${DATA_RETENTION_DAYS:-2555}
      
      # Monitoring
      - PROMETHEUS_ENDPOINT=http://prometheus:9090
      - JAEGER_ENDPOINT=http://jaeger:14268/api/traces
    
    depends_on:
      - postgresql
      - redis-master
      - kafka-1
    
    networks:
      - lms-internal
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    labels:
      - "lms.service.type=application"
      - "lms.service.name=user-service"
      - "lms.service.description=User management and profile service"
      - "lms.service.version=${VERSION:-latest}"
